/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";
import { BigNumberish } from "ethers/utils";

import { TransactionOverrides } from ".";
import { OracleAdapterMock } from "./OracleAdapterMock";

export class OracleAdapterMockFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _asset: string,
    _dummyPrice: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<OracleAdapterMock> {
    return super.deploy(_asset, _dummyPrice, overrides) as Promise<
      OracleAdapterMock
    >;
  }
  getDeployTransaction(
    _asset: string,
    _dummyPrice: BigNumberish,
    overrides?: TransactionOverrides
  ): UnsignedTransaction {
    return super.getDeployTransaction(_asset, _dummyPrice, overrides);
  }
  attach(address: string): OracleAdapterMock {
    return super.attach(address) as OracleAdapterMock;
  }
  connect(signer: Signer): OracleAdapterMockFactory {
    return super.connect(signer) as OracleAdapterMockFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OracleAdapterMock {
    return new Contract(address, _abi, signerOrProvider) as OracleAdapterMock;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_dummyPrice",
        type: "uint256"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    inputs: [],
    name: "asset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "dummyPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_assetOne",
        type: "address"
      },
      {
        internalType: "address",
        name: "_assetTwo",
        type: "address"
      }
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516101bd3803806101bd8339818101604052604081101561003357600080fd5b508051602090910151600055600180546001600160a01b039092166001600160a01b031990921691909117905561014e8061006f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806338d52e0f14610046578063ac41865a1461006a578063d97248d4146100b3575b600080fd5b61004e6100cd565b604080516001600160a01b039092168252519081900360200190f35b6100986004803603604081101561008057600080fd5b506001600160a01b03813581169160200135166100dc565b60408051921515835260208301919091528051918290030190f35b6100bb610112565b60408051918252519081900360200190f35b6001546001600160a01b031681565b60015460009081906001600160a01b038581169116141561010457505060005460019061010b565b5060009050805b9250929050565b6000548156fea26469706673582212205f12fbde3516f3ea733c88483715f27212b1eb07715b29c76ad650c96ede0b9d64736f6c634300060a0033";
