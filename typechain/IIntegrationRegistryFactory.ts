/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, Signer } from "ethers";
import { Provider } from "ethers/providers";

import { IIntegrationRegistry } from "./IIntegrationRegistry";

export class IIntegrationRegistryFactory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IIntegrationRegistry {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IIntegrationRegistry;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_module",
        type: "address"
      },
      {
        internalType: "string",
        name: "_id",
        type: "string"
      },
      {
        internalType: "address",
        name: "_wrapper",
        type: "address"
      }
    ],
    name: "addIntegration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_module",
        type: "address"
      },
      {
        internalType: "string",
        name: "_id",
        type: "string"
      }
    ],
    name: "getIntegrationAdapter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_module",
        type: "address"
      },
      {
        internalType: "bytes32",
        name: "_id",
        type: "bytes32"
      }
    ],
    name: "getIntegrationAdapterWithHash",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_module",
        type: "address"
      },
      {
        internalType: "string",
        name: "_id",
        type: "string"
      }
    ],
    name: "isValidIntegration",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
