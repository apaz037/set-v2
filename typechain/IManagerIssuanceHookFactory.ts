/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, Signer } from "ethers";
import { Provider } from "ethers/providers";

import { IManagerIssuanceHook } from "./IManagerIssuanceHook";

export class IManagerIssuanceHookFactory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IManagerIssuanceHook {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IManagerIssuanceHook;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISetToken",
        name: "_setToken",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_issueQuantity",
        type: "uint256"
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address"
      },
      {
        internalType: "address",
        name: "_to",
        type: "address"
      }
    ],
    name: "invokePreIssueHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "contract ISetToken",
        name: "_setToken",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_redeemQuantity",
        type: "uint256"
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address"
      },
      {
        internalType: "address",
        name: "_to",
        type: "address"
      }
    ],
    name: "invokePreRedeemHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];
