/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { TransactionOverrides } from ".";
import { ResourceIdentifierMock } from "./ResourceIdentifierMock";

export class ResourceIdentifierMockFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: TransactionOverrides): Promise<ResourceIdentifierMock> {
    return super.deploy(overrides) as Promise<ResourceIdentifierMock>;
  }
  getDeployTransaction(overrides?: TransactionOverrides): UnsignedTransaction {
    return super.getDeployTransaction(overrides);
  }
  attach(address: string): ResourceIdentifierMock {
    return super.attach(address) as ResourceIdentifierMock;
  }
  connect(signer: Signer): ResourceIdentifierMockFactory {
    return super.connect(signer) as ResourceIdentifierMockFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ResourceIdentifierMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ResourceIdentifierMock;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IController",
        name: "_controller",
        type: "address"
      }
    ],
    name: "testGetIntegrationRegistry",
    outputs: [
      {
        internalType: "contract IIntegrationRegistry",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "contract IController",
        name: "_controller",
        type: "address"
      }
    ],
    name: "testGetPriceOracle",
    outputs: [
      {
        internalType: "contract IPriceOracle",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "contract IController",
        name: "_controller",
        type: "address"
      }
    ],
    name: "testGetSetValuer",
    outputs: [
      {
        internalType: "contract ISetValuer",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610238806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80634939a1861461004657806391d4766214610088578063b565b9d8146100ae575b600080fd5b61006c6004803603602081101561005c57600080fd5b50356001600160a01b03166100d4565b604080516001600160a01b039092168252519081900360200190f35b61006c6004803603602081101561009e57600080fd5b50356001600160a01b03166100e5565b61006c600480360360208110156100c457600080fd5b50356001600160a01b03166100f0565b60006100df826100fb565b92915050565b60006100df82610174565b60006100df826101bb565b6000816001600160a01b031663e765ced660006040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561014257600080fd5b505afa158015610156573d6000803e3d6000fd5b505050506040513d602081101561016c57600080fd5b505192915050565b6000816001600160a01b031663e765ced660026040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561014257600080fd5b6000816001600160a01b031663e765ced660016040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561014257600080fdfea26469706673582212206c6918cb1b00cbb3044b7ac96cdf8956d681e3443682128c7c2c5630d92883ac64736f6c634300060a0033";
