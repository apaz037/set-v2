"use strict";
/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IManagerIssuanceHookFactory = void 0;
var ethers_1 = require("ethers");
var IManagerIssuanceHookFactory = /** @class */ (function () {
    function IManagerIssuanceHookFactory() {
    }
    IManagerIssuanceHookFactory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    return IManagerIssuanceHookFactory;
}());
exports.IManagerIssuanceHookFactory = IManagerIssuanceHookFactory;
var _abi = [
    {
        inputs: [
            {
                internalType: "contract ISetToken",
                name: "_setToken",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "_issueQuantity",
                type: "uint256"
            },
            {
                internalType: "address",
                name: "_sender",
                type: "address"
            },
            {
                internalType: "address",
                name: "_to",
                type: "address"
            }
        ],
        name: "invokePreIssueHook",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "contract ISetToken",
                name: "_setToken",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "_redeemQuantity",
                type: "uint256"
            },
            {
                internalType: "address",
                name: "_sender",
                type: "address"
            },
            {
                internalType: "address",
                name: "_to",
                type: "address"
            }
        ],
        name: "invokePreRedeemHook",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    }
];
