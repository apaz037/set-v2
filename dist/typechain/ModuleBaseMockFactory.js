"use strict";
/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ModuleBaseMockFactory = void 0;
var ethers_1 = require("ethers");
var ModuleBaseMockFactory = /** @class */ (function (_super) {
    __extends(ModuleBaseMockFactory, _super);
    function ModuleBaseMockFactory(signer) {
        return _super.call(this, _abi, _bytecode, signer) || this;
    }
    ModuleBaseMockFactory.prototype.deploy = function (_controller, overrides) {
        return _super.prototype.deploy.call(this, _controller, overrides);
    };
    ModuleBaseMockFactory.prototype.getDeployTransaction = function (_controller, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _controller, overrides);
    };
    ModuleBaseMockFactory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    ModuleBaseMockFactory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    ModuleBaseMockFactory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    return ModuleBaseMockFactory;
}(ethers_1.ContractFactory));
exports.ModuleBaseMockFactory = ModuleBaseMockFactory;
var _abi = [
    {
        inputs: [
            {
                internalType: "contract IController",
                name: "_controller",
                type: "address"
            }
        ],
        stateMutability: "nonpayable",
        type: "constructor"
    },
    {
        inputs: [],
        name: "controller",
        outputs: [
            {
                internalType: "contract IController",
                name: "",
                type: "address"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "contract ISetToken",
                name: "_setToken",
                type: "address"
            }
        ],
        name: "initializeModuleOnSet",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [],
        name: "removeModule",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [],
        name: "removed",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "_integrationName",
                type: "string"
            }
        ],
        name: "testGetAndValidateAdapter",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_integrationHash",
                type: "bytes32"
            }
        ],
        name: "testGetAndValidateAdapterWithHash",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_feeIndex",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "_quantity",
                type: "uint256"
            }
        ],
        name: "testGetModuleFee",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "contract ISetToken",
                name: "_setToken",
                type: "address"
            },
            {
                internalType: "address",
                name: "_toCheck",
                type: "address"
            }
        ],
        name: "testIsSetManager",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "contract ISetToken",
                name: "_setToken",
                type: "address"
            }
        ],
        name: "testIsSetPendingInitialization",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "contract ISetToken",
                name: "_setToken",
                type: "address"
            }
        ],
        name: "testIsSetValidAndInitialized",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "contract ISetToken",
                name: "_setToken",
                type: "address"
            }
        ],
        name: "testOnlyManagerAndValidSet",
        outputs: [],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "contract ISetToken",
                name: "_setToken",
                type: "address"
            }
        ],
        name: "testOnlyModule",
        outputs: [],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "contract ISetToken",
                name: "_setToken",
                type: "address"
            }
        ],
        name: "testOnlySetManager",
        outputs: [],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "contract ISetToken",
                name: "_setToken",
                type: "address"
            }
        ],
        name: "testOnlyValidAndInitializedSet",
        outputs: [],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "contract ISetToken",
                name: "_setToken",
                type: "address"
            }
        ],
        name: "testOnlyValidInitialization",
        outputs: [],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "contract ISetToken",
                name: "_setToken",
                type: "address"
            },
            {
                internalType: "address",
                name: "_component",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "_feeQuantity",
                type: "uint256"
            }
        ],
        name: "testPayProtocolFeeFromSetToken",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "contract IERC20",
                name: "_token",
                type: "address"
            },
            {
                internalType: "address",
                name: "_from",
                type: "address"
            },
            {
                internalType: "address",
                name: "_to",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "_quantity",
                type: "uint256"
            }
        ],
        name: "testTransferFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    }
];
var _bytecode = "0x608060405234801561001057600080fd5b506040516118433803806118438339818101604052602081101561003357600080fd5b5051600080546001600160a01b039092166001600160a01b03199092169190911790556117de806100656000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806392a11a35116100a2578063dedd3e1e11610071578063dedd3e1e146102f3578063eb0932a214610319578063f631bc841461034e578063f77c4791146103f4578063fe4445fd146103fc5761010b565b806392a11a3514610245578063b20f5f721461026b578063c380abcc14610291578063d6409d94146102cd5761010b565b8063401b880f116100de578063401b880f146101bb578063649979b6146101e1578063847ef08d146102075780638feaf4db1461020f5761010b565b80632487451e146101105780632bc4d18d146101495780633107ee4f1461018b5780633e55ea0314610193575b600080fd5b61012d6004803603602081101561012657600080fd5b5035610422565b604080516001600160a01b039092168252519081900360200190f35b6101776004803603604081101561015f57600080fd5b506001600160a01b0381358116916020013516610433565b604080519115158252519081900360200190f35b610177610446565b6101b9600480360360208110156101a957600080fd5b50356001600160a01b0316610456565b005b610177600480360360208110156101d157600080fd5b50356001600160a01b03166104b8565b6101b9600480360360208110156101f757600080fd5b50356001600160a01b03166104c3565b6101b961064b565b6101b96004803603606081101561022557600080fd5b506001600160a01b03813581169160208101359091169060400135610660565b6101776004803603602081101561025b57600080fd5b50356001600160a01b031661066b565b6101b96004803603602081101561028157600080fd5b50356001600160a01b0316610676565b6101b9600480360360808110156102a757600080fd5b506001600160a01b03813581169160208101358216916040820135169060600135610716565b6101b9600480360360208110156102e357600080fd5b50356001600160a01b0316610728565b6101b96004803603602081101561030957600080fd5b50356001600160a01b031661077e565b61033c6004803603604081101561032f57600080fd5b508035906020013561088f565b60408051918252519081900360200190f35b61012d6004803603602081101561036457600080fd5b81019060208101813564010000000081111561037f57600080fd5b82018360208201111561039157600080fd5b803590602001918460018302840111640100000000831117156103b357600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061089b945050505050565b61012d6108a6565b6101b96004803603602081101561041257600080fd5b50356001600160a01b03166108b5565b600061042d826108bf565b92915050565b600061043f83836109b5565b9392505050565b600054600160a01b900460ff1681565b803361046282826109b5565b6104b3576040805162461bcd60e51b815260206004820152601c60248201527f4d7573742062652074686520536574546f6b656e206d616e6167657200000000604482015290519081900360640190fd5b505050565b600061042d82610a37565b80600260408051631ade272960e11b815233600482015290516001600160a01b038416916335bc4e52916024808301926020929190829003018186803b15801561050c57600080fd5b505afa158015610520573d6000803e3d6000fd5b505050506040513d602081101561053657600080fd5b5051600281111561054357fe5b14610595576040805162461bcd60e51b815260206004820152601860248201527f4f6e6c7920746865206d6f64756c652063616e2063616c6c0000000000000000604482015290519081900360640190fd5b600054604080516342f6e38960e01b815233600482015290516001600160a01b03909216916342f6e38991602480820192602092909190829003018186803b1580156105e057600080fd5b505afa1580156105f4573d6000803e3d6000fd5b505050506040513d602081101561060a57600080fd5b50516106475760405162461bcd60e51b81526004018080602001828103825260248152602001806117386024913960400191505060405180910390fd5b5050565b6000805460ff60a01b1916600160a01b179055565b6104b3838383610ab3565b600061042d82610b4e565b8061068181336109b5565b6106d2576040805162461bcd60e51b815260206004820152601c60248201527f4d7573742062652074686520536574546f6b656e206d616e6167657200000000604482015290519081900360640190fd5b6106db81610b4e565b6106475760405162461bcd60e51b81526004018080602001828103825260288152602001806116ef6028913960400191505060405180910390fd5b61072284848484610c15565b50505050565b806001600160a01b0316630ffe0f1e6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561076357600080fd5b505af1158015610777573d6000803e3d6000fd5b5050505050565b60005460408051631d3af8fb60e21b81526001600160a01b0380851660048301529151849392909216916374ebe3ec91602480820192602092909190829003018186803b1580156107ce57600080fd5b505afa1580156107e2573d6000803e3d6000fd5b505050506040513d60208110156107f857600080fd5b50516108355760405162461bcd60e51b815260040180806020018281038252602381526020018061175c6023913960400191505060405180910390fd5b61083e81610a37565b610647576040805162461bcd60e51b815260206004820152601e60248201527f4d7573742062652070656e64696e6720696e697469616c697a6174696f6e0000604482015290519081900360640190fd5b600061043f8383610c21565b600061042d82610cb9565b6000546001600160a01b031681565b806106db81610b4e565b6000805481906108d7906001600160a01b0316610cd0565b6001600160a01b031663e6d642c530856040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b031681526020018281526020019250505060206040518083038186803b15801561093457600080fd5b505afa158015610948573d6000803e3d6000fd5b505050506040513d602081101561095e57600080fd5b505190506001600160a01b03811661042d576040805162461bcd60e51b815260206004820152601560248201527426bab9ba103132903b30b634b21030b230b83a32b960591b604482015290519081900360640190fd5b6000816001600160a01b0316836001600160a01b031663481c6a756040518163ffffffff1660e01b815260040160206040518083038186803b1580156109fa57600080fd5b505afa158015610a0e573d6000803e3d6000fd5b505050506040513d6020811015610a2457600080fd5b50516001600160a01b0316149392505050565b604080516353bae5f760e01b815230600482015290516000916001600160a01b038416916353bae5f791602480820192602092909190829003018186803b158015610a8157600080fd5b505afa158015610a95573d6000803e3d6000fd5b505050506040513d6020811015610aab57600080fd5b505192915050565b80156104b3576104b3826000809054906101000a90046001600160a01b03166001600160a01b031663469048406040518163ffffffff1660e01b815260040160206040518083038186803b158015610b0a57600080fd5b505afa158015610b1e573d6000803e3d6000fd5b505050506040513d6020811015610b3457600080fd5b50516001600160a01b03861691908463ffffffff610d1716565b6000805460408051631d3af8fb60e21b81526001600160a01b038581166004830152915191909216916374ebe3ec916024808301926020929190829003018186803b158015610b9c57600080fd5b505afa158015610bb0573d6000803e3d6000fd5b505050506040513d6020811015610bc657600080fd5b5051801561042d5750604080516335fc6c9f60e21b815230600482015290516001600160a01b0384169163d7f1b27c916024808301926020929190829003018186803b158015610a8157600080fd5b61072284848484610ea0565b600080546040805163792aa04f60e01b815230600482015260248101869052905183926001600160a01b03169163792aa04f916044808301926020929190829003018186803b158015610c7357600080fd5b505afa158015610c87573d6000803e3d6000fd5b505050506040513d6020811015610c9d57600080fd5b50519050610cb1838263ffffffff610fce16565b949350505050565b600080610cc583610ff8565b905061043f816108bf565b6000816001600160a01b031663e765ced660006040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610a8157600080fd5b8015610722576000836001600160a01b03166370a08231866040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b158015610d7557600080fd5b505afa158015610d89573d6000803e3d6000fd5b505050506040513d6020811015610d9f57600080fd5b50519050610daf85858585611003565b6000846001600160a01b03166370a08231876040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b158015610e0757600080fd5b505afa158015610e1b573d6000803e3d6000fd5b505050506040513d6020811015610e3157600080fd5b50519050610e45828463ffffffff61120016565b8114610e98576040805162461bcd60e51b815260206004820152601d60248201527f496e76616c696420706f7374207472616e736665722062616c616e6365000000604482015290519081900360640190fd5b505050505050565b8015610722576000846001600160a01b03166370a08231846040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b158015610efe57600080fd5b505afa158015610f12573d6000803e3d6000fd5b505050506040513d6020811015610f2857600080fd5b50519050610f3885858585611242565b6000856001600160a01b03166370a08231856040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b158015610f9057600080fd5b505afa158015610fa4573d6000803e3d6000fd5b505050506040513d6020811015610fba57600080fd5b50519050610e45828463ffffffff61129c16565b600061043f670de0b6b3a7640000610fec858563ffffffff6112f616565b9063ffffffff61134f16565b805160209091012090565b801561072257604080516001600160a01b038085166024808401919091526044808401869052845180850382018152606494850186526020810180516001600160e01b031663a9059cbb60e01b17815295516347b7819960e11b8152898516600482019081526000948201859052606093820193845282519682019690965281519196948b1695638f6f0332958b959489949293909260849091019190808383895b838110156110bd5781810151838201526020016110a5565b50505050905090810190601f1680156110ea5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b15801561110b57600080fd5b505af115801561111f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561114857600080fd5b810190808051604051939291908464010000000082111561116857600080fd5b90830190602082018581111561117d57600080fd5b825164010000000081118282018810171561119757600080fd5b82525081516020918201929091019080838360005b838110156111c45781810151838201526020016111ac565b50505050905090810190601f1680156111f15780820380516001836020036101000a031916815260200191505b50604052505050505050505050565b600061043f83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611391565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610722908590611428565b60008282018381101561043f576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000826113055750600061042d565b8282028284828161131257fe5b041461043f5760405162461bcd60e51b81526004018080602001828103825260218152602001806117176021913960400191505060405180910390fd5b600061043f83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506114d9565b600081848411156114205760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156113e55781810151838201526020016113cd565b50505050905090810190601f1680156114125780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b606061147d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661153e9092919063ffffffff16565b8051909150156104b35780806020019051602081101561149c57600080fd5b50516104b35760405162461bcd60e51b815260040180806020018281038252602a81526020018061177f602a913960400191505060405180910390fd5b600081836115285760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156113e55781810151838201526020016113cd565b50600083858161153457fe5b0495945050505050565b6060610cb184846000856060611553856116b5565b6115a4576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106115e35780518252601f1990920191602091820191016115c4565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611645576040519150601f19603f3d011682016040523d82523d6000602084013e61164a565b606091505b5091509150811561165e579150610cb19050565b80511561166e5780518082602001fd5b60405162461bcd60e51b81526020600482018181528651602484015286518793919283926044019190850190808383600083156113e55781810151838201526020016113cd565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610cb157505015159291505056fe4d75737420626520612076616c696420616e6420696e697469616c697a656420536574546f6b656e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774d6f64756c65206d75737420626520656e61626c6564206f6e20636f6e74726f6c6c65724d75737420626520636f6e74726f6c6c65722d656e61626c656420536574546f6b656e5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a264697066735822122003b6edf5e936d26707a4bddbaea3e0024d0ea3be48728d4b24872947620821fe64736f6c634300060a0033";
