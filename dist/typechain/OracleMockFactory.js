"use strict";
/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.OracleMockFactory = void 0;
var ethers_1 = require("ethers");
var OracleMockFactory = /** @class */ (function (_super) {
    __extends(OracleMockFactory, _super);
    function OracleMockFactory(signer) {
        return _super.call(this, _abi, _bytecode, signer) || this;
    }
    OracleMockFactory.prototype.deploy = function (_startingPrice, overrides) {
        return _super.prototype.deploy.call(this, _startingPrice, overrides);
    };
    OracleMockFactory.prototype.getDeployTransaction = function (_startingPrice, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _startingPrice, overrides);
    };
    OracleMockFactory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    OracleMockFactory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    OracleMockFactory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    return OracleMockFactory;
}(ethers_1.ContractFactory));
exports.OracleMockFactory = OracleMockFactory;
var _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_startingPrice",
                type: "uint256"
            }
        ],
        stateMutability: "nonpayable",
        type: "constructor"
    },
    {
        inputs: [],
        name: "price",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [],
        name: "read",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            }
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_newPrice",
                type: "uint256"
            }
        ],
        name: "updatePrice",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    }
];
var _bytecode = "0x608060405234801561001057600080fd5b506040516101083803806101088339818101604052602081101561003357600080fd5b505160005560c2806100466000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c806357de26a41460415780638d6cc56d146059578063a035b1fe146075575b600080fd5b6047607b565b60408051918252519081900360200190f35b607360048036036020811015606d57600080fd5b50356081565b005b60476086565b60005490565b600055565b6000548156fea26469706673582212205c1cdbb033c8513a67e034cf473bc0e5f4fbf58809ab45e0ef983ae907fdd4f064736f6c634300060a0033";
